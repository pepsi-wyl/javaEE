<?xml version="1.0" encoding="utf8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       https://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd
">


    <!-- 引入数据库配置文件  配置数据库dataSource -->
    <context:property-placeholder location="classpath:mysql.properties"/>

    <beans>

        <!--data source  使用Druid连接池-->
        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
            <property name="driverClassName"
                      value="${mysql.driverClassName}"/>
            <property name="url"
                      value="${mysql.url}"/>
            <property name="username"
                      value="${mysql.username}"/>
            <property name="password"
                      value="${mysql.password}"/>
        </bean>

        <!--sqlSessionFactory-->
        <!--利用Spring中SqlSessionFactoryBean生成sqlSessionFactory-->
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
            <!--配置数据源-->
            <property name="dataSource" ref="dataSource"/>
            <!--引入外部mybatis-config.xml-->
            <property name="configLocation" value="classpath:mybatis-config.xml"/>
        </bean>

        <!--Mybatis下  配置扫描Dao接口包,动态实现Dao接口注入到spring容器中-->
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
            <!-- 注入sqlSessionFactory -->
            <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
            <!-- 给出需要扫描mapper接口包 -->
            <property name="basePackage" value="mapper"/>
        </bean>

    </beans>


</beans>